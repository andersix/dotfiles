# ~/.shell_prompt_choice

# Manual override: "starship", "liquidprompt", or empty ("") for auto
CHOOSE_PROMPT_FORCE=""

# Debug mode: 1 = enable debug messages
CHOOSE_PROMPT_DEBUG=0

# Internal: to prevent re-loading
CHOOSE_PROMPT_ALREADY_SET=0

choose_prompt() {
    if [ "$CHOOSE_PROMPT_ALREADY_SET" -eq 1 ]; then
        [ "$CHOOSE_PROMPT_DEBUG" -eq 1 ] && echo "[choose_prompt] Prompt already set, skipping."
        return
    fi

    [ "$CHOOSE_PROMPT_DEBUG" -eq 1 ] && echo "[choose_prompt] Selecting prompt..."

    # Detect the shell
    local shell_name
    if [ -n "$ZSH_VERSION" ]; then
        shell_name="zsh"
    elif [ -n "$BASH_VERSION" ]; then
        shell_name="bash"
    else
        shell_name="sh"
    fi

    # Determine starship binary location
    local STARSHIP_BIN
    case "$(uname)" in
        Darwin)
            STARSHIP_BIN="/opt/homebrew/bin/starship"
            ;;
        *)
            STARSHIP_BIN="$(command -v starship)"
            ;;
    esac

    local prompt_choice

    if [ -n "$CHOOSE_PROMPT_FORCE" ]; then
        prompt_choice="$CHOOSE_PROMPT_FORCE"
        [ "$CHOOSE_PROMPT_DEBUG" -eq 1 ] && echo "[choose_prompt] Forced prompt choice: $prompt_choice"
    elif [[ -x "$STARSHIP_BIN" ]]; then
        prompt_choice="starship"
        [ "$CHOOSE_PROMPT_DEBUG" -eq 1 ] && echo "[choose_prompt] Detected starship at $STARSHIP_BIN"
    else
        prompt_choice="liquidprompt"
        [ "$CHOOSE_PROMPT_DEBUG" -eq 1 ] && echo "[choose_prompt] Falling back to liquidprompt"
    fi

    case "$prompt_choice" in
        starship)
            eval "$("$STARSHIP_BIN" init "$shell_name")"
            export STARSHIP_CONFIG="$HOME/.config/starship/starship.toml"
            ;;
        liquidprompt)
            [[ -f ~/.liquidpromptrc ]] && source ~/.liquidpromptrc
            [[ -f ~/.liquidprompt ]] && source ~/.liquidprompt
            ;;
    esac

    # Mark as done
    CHOOSE_PROMPT_ALREADY_SET=1

    [ "$CHOOSE_PROMPT_DEBUG" -eq 1 ] && echo "[choose_prompt] Prompt setup complete."
}

